export default {
  async fetch(request, env, ctx) {
    const url = new URL(request.url);
    const clientId = url.searchParams.get("client_id");

    if (!clientId) {
      return new Response("Missing client_id", { status: 400 });
    }

    const baseId = "appA1I9EyPrIUNbTR";
    const tableName = "html_combined";

    const airtableUrl = `https://api.airtable.com/v0/${baseId}/${encodeURIComponent(tableName)}?filterByFormula=${encodeURIComponent(`{Client ID} = '${clientId}'`)}`;

    try {
      const airtableResponse = await fetch(airtableUrl, {
        method: "GET",
        headers: {
          Authorization: `Bearer ${env.AIRTABLE_KEY}`,
          "Content-Type": "application/json"
        }
      });

      if (!airtableResponse.ok) {
        return new Response("Airtable fetch failed", {
          status: 502,
          headers: { "Content-Type": "text/plain" }
        });
      }

      const data = await airtableResponse.json();
      const html = data.records?.[0]?.fields?.html_combined;

      return new Response(html || "<div>No matches found.</div>", {
        status: 200,
        headers: {
          "Content-Type": "text/html; charset=UTF-8",
          "Cache-Control": "no-store"
        }
      });
    } catch (error) {
      return new Response("Unexpected error: " + error.message, {
        status: 500,
        headers: { "Content-Type": "text/plain" }
      });
    }
  }
};
